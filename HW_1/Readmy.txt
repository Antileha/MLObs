Описание проекта

Этот проект включает в себя создание наборов данных, обработку данных, обучение модели машинного обучения и тестирование модели.




Структура проекта

- `data_creation.py`: скрипт для создания наборов данных, описывающих некий процесс (например, изменение дневной температуры).
- `model_preprocessing.py`: скрипт для предобработки данных, например с помощью sklearn.preprocessing.StandardScaler.
- `model_preparation.py`: скрипт для создания и обучения модели машинного обучения на построенных данных из папки «train».
- `model_testing.py`: скрипт для проверки модели машинного обучения на построенных данных из папки «test».
- `pipeline.sh`: bash-скрипт для последовательного запуска всех python-скриптов.



Использование

1. Запустите `pipeline.sh`, чтобы выполнить все этапы работы.



Описание файлов


data_creation.py

- Создает различные наборы данных, описывающие некий процесс.
- Наборы данных сохраняются в папках «train» и «test».
- Возможные проблемы и их решения:
  - Проблема: возникают аномалии или шумы в данных.
    - Решение: можно добавить обработку данных для удаления аномалий или уменьшения шума.


model_preprocessing.py

- Выполняет предобработку данных, например с помощью sklearn.preprocessing.StandardScaler.
- Возможные проблемы и их решения:
  - Проблема: возникают пропущенные значения в данных.
    - Решение: можно использовать методы заполнения пропущенных значений, такие как заполнение средним или медианой.


model_preparation.py

- Создает и обучает модель машинного обучения на построенных данных из папки «train».
- Возможные проблемы и их решения:
  - Проблема: модель не подходит для данных.
    - Решение: можно попробовать другие модели машинного обучения или настроить параметры текущей модели.


model_testing.py

- Проверяет модель машинного обучения на построенных данных из папки «test».
- Возможные проблемы и их решения:
  - Проблема: модель дает низкую точность на тестовых данных.
    - Решение: можно использовать методы оценки модели, такие как кросс-валидация, для определения проблем и улучшения точности модели.


pipeline.sh

- Последовательно запускает все python-скрипты.


Зависимости

- Python 3.x
- Библиотеки Python: scikit-learn, numpy, pandas, joblib
